EUSTAGGER LITE INSTALATZEKO
===========================

Eustagger Lite linux sistema ezberdinetan probatu dugu, batzuk zaharragoak 
(RHEL/Centos 6), beste batzuk berriagoak (Ubuntu 13.10). Jarraian dauden
azalpenak Ubuntu 12.04, 13.10, 14.04, 16.04 eta Fedora 18-20 bertsioekin funtzionatu beharko
lukete.

Eustagger Lite programak dependentzia hauek ditu:

pcre++ (0.9.5 bertsioarekin probatuta)
vislcg 3 (20130826 bertsioarekin probatuta)
SWI Prolog (5.10.5 eta 6.6.6 bertsioekin probatuta)
Foma (0.9.17 eta 0.9.18 bertsioekin probatuta)
Freeling (3.1 bertsioarekin probatuta)
Boost (1.53 - 1.58 bertsioekin probatuta)

Aldi berean programa/liburutegi horiek beraien dependentziak dituzte. Batzuk 
linux banaketaren pakete ofizialak jarriz instalatu ahal izango dira:

Ubuntu:
=======

        $ apt-get install subversion make cmake cpp libicu48 libicu-dev\
          autoconf bison flex zlib1g zlib1g-dev libpcre3 libpcre3-dev\
          libpcre++0 libpcre++-dev libboost-all-dev

	Ubuntu 16.04 bertsioan:

	$ apt-get install subversion make cmake cpp libicu55 libicu-dev\
	  autoconf bison flex zlib1g zlib1g-dev libpcre3 libpcre3-dev\ 
	  libpcre++0v5 libpcre++-dev libboost-all-dev


Fedora:
=======

        $ yum install subversion make cmake gcc-c++ libicu libicu-devel\
          autoconf bison flex pl pl-devel zlib zlib-devel pcre pcre-devel\
          boost boost-devel


Fedoran pcre++ eskuz instalatu behar da. Horretarako 

        $ wget http://www.daemon.de/idisk/Apps/pcre++/pcre++-0.9.5.tar.gz
        edo bestela gure webgunetik:
        $ wget http://ixa2.si.ehu.es/eustagger/download/pcre++-0.9.5.tar.gz 


        Deskonprimitu eta nahi duzun prefix-ean instalatu:

        $ tar -zxvf pcre++-0.9.5.tar.gz
        $ cd pcre++-0.9.5
        $ ./configure (64 bit-eko sistema batzuetan --with-pcre-lib=/usr/lib64 erabili)
        $ make
        $ make install

(lehenetsitako instalazio prefix-a /usr/local da, aldatzeko ./configure --prefix=path)


ESKUZ INSTALATU BEHARREKOAK:

foma:
=====

'dependencies' karpetan topatu dezakezu:

        $ cd dependencies
	edo bestela githubetik hartu:
        $ wget https://github.com/mhulden/foma/archive/master.zip
	$ mv master.zip foma-0.9.18.zip
        edo bestela IXAko webgunetik deskargatu:
        $ wget http://ixa2.si.ehu.es/eustagger/download/foma-0.9.17.tar.gz


Deskonprimitu, konpilatu eta instalatu:

        $ unzip foma-0.9.18.zip (or tar -zxvf foma-0.9.18.tar.gz if you took it from the web)
        $ cd foma-0.9.18
        $ make
        $ make install

(lehenetsitako instalazio prefix-a /usr/local da, aldatzeko editatu Makefile fitxategia)

ARAZOAK 1:
foma konpilatzean (make komandoa exekutatzean) errorea ematen badu libreadline ez duela topatzen esanez:

/usr/bin/ld: cannot find -lreadline
/usr/bin/ld: cannot find -ltermcap
collect2: error: ld returned 1 exit status
Makefile:68: recipe for target 'libfoma.so.0.9.17' failed
make: *** [libfoma.so.0.9.17] Error 1

Liburutegia instalatu behar da. Ubuntun (16.04) adibidez:

       apt-get install libreadline-dev


vislcg3:
========

Deskargatu:

        $ wget http://beta.visl.sdu.dk/download/vislcg3/vislcg3-20130826.tar.gz
        edo bestela gure webgunetik:
        $ wget http://ixa2.si.ehu.es/eustagger/download/vislcg3-20130826.tar.gz

Deskonprimitu, konpilatu eta instalatu (cmake erabiltzen da):

        $ tar -zxvf vislcg3-20130826.tar.gz
        $ cd vislcg3-20130826
        $ ./cmake.sh
        $ make -j3
        $ make install

*.h eta *.hpp fitxategiak eskuz kopiatu behar dira erabakitako prefix-era:

        $ cp src/*.h src/*.hpp /gure_prefix_include (adib. /usr/local/include)

(prefix-a aldatzeko cmake.sh-ri  -DCMAKE_INSTALL_PREFIX=/path parametroa pasatzea dago)
(tcmalloc ez erabiltzeko -DUSE_TCMALLOC:BOOL=false pasa  cmake.sh-ri - Arazoak ematen ditu ubuntu 16.04n)
(boost liburutegia topatuko ez balu export BOOST_ROOT=/boost_kokapena)





Freeling 3.1
============

Programa Freeling 3.1rekin probatu dugu (3.0 bertsioak ez du balio).

http://devel.cpl.upc.edu/freeling/downloads/32 helbidetik deskargatu freeling-3.1.tar.gz
paketea. Edo bestela gure webgunetik deskargatu:

         $ wget http://ixa2.si.ehu.es/eustagger/download/freeling-3.1.tar.gz


Deskonprimitu, konpilatu eta instalatu:

        $ tar -zxvf freeling-3.1.tar.gz
        $ cd freeling-3.1
        ( Fedora/RedHat sistemetan hau egin behar da: $ export LDFLAGS=-lboost_system )
        $ ./configure --disable-warnings
        $ make
        $ make install

* Linux banaketarena ez den Boost instalazio jakin bat erabili nahi izanez gero,
configure egikaritu baino lehen hau egin:

$ export LDFLAGS="-L/nire_boost_instalazioa/lib -lboost_system"
$ export CPPFLAGS="-I/nire_boost_instalazioa/include"


* Freeling 3.1 konpilatzean honako errore hau eman dezake:

../../src/include/freeling/morfo/foma_FSM.h:1: error: stray '\357' in program
../../src/include/freeling/morfo/foma_FSM.h:1: error: stray '\273' in program
../../src/include/freeling/morfo/foma_FSM.h:1: error: stray '\277' in program

Hori ekiditzeko src/include/freeling/morfo/foma_FSM.h fitxategia editatu
eta hasierako komentario lerroak ezabatu.

swi-prolog:
============

ubuntu 14.04tik aurrera prolog-en 7.x.x bertsioak instalatzen dira apt bidez (sudo apt-get install swi-prolog), baina eustaggerrek 6.6.6 behar du gehienez. Horrenbestez, swipl-6.6.6 bertsioa deskargatu eta eskuz konpilatu beharko da:

$ wget http://www.swi-prolog.org/download/stable/src/pl-6.6.6.tar.gz

eta jarraitu hemengo argibideak: http://www.swi-prolog.org/build/ - argibide azkarrak:

$ cd src/
$ . /configure
$ make
$ sudo make install
$ cd ../packages
$ . /configure
$ make
$ sudo make install


ARAZOAK 1: arazoak ematen baditu instalazioan zehar baliteke libxpm-dev eta libarchive-dev paketeak instalatu behar izatea. Ubuntun:
    $ sudo apt-get install libxpm-dev libarchive-dev

ARAZOAK 2: Arazorik balego jpl konpilatzean aurrera egin instalazioarekin, ez da beharrezkoa. Adib:
    libjava.so not found
    libverify.so not found
    libjvm.so not found
   
    
ARAZOAK 3: ./configure exekutatzean baliteke --enable-shared aktibatu behar izatea. adib:
   $ ./configure --prefix=/usr/local/swipl-6.6.6/ --enable-shared



eustagger: 
==========

Eskuratu eustagger:

        $ wget https://github.com/ixa-ehu/eustagger-lite/archive/master.zip

Konpilatu eta instalatzeko (goiko dependentziak ):

        $ cd eustagger
        $ autoconf
        $ ./configure

	Sistema eragileko swipl erabiltzen bada seguraski swipl-ren fitxategiak
	non dauden adierazi behar zaio 	"--with-swipl-include="  eta "--with-lib-include="
	parametroak erabiliz. Adibidez Ubuntun "--with-swipl-include=/usr/lib/swi-prolog/include"
	gehitu behar da... 
	   adibidez, hurrengo agindua erabiliko genuke, suposatus swi-prolog /usr/local/swipl-6.6.6 karpetan instalatu dugula
	   eta vislcg3 /usr/local/vislcg3 karpetan instalatu dugula. Aginduak eustagger /usr/local/eustagger karpetan instalatzeko esaten du gainera --prefix erabilita.
	   $ ./configure --with-swipl-include=/usr/local/swipl-6.6.6/lib/swipl-6.6.6/include/ --with-swipl-lib=/usr/local/swipl-6.6.6/lib/swipl-6.6.6/lib/i686-linux/ --with-swipl-bin=/usr/local/swipl-6.6.6/bin/ --with-vislcg3-include=/usr/local/vislcg3/lib/include --with-vislcg3-lib=/usr/local/vislcg3/lib/ --prefix=/usr/local/eustagger
	
	$ make
	$ make install

Lehenetsitako instalazio prefix-a /usr/local da. Aldatzeko --prefix aukera
erabili ./configure egikaritzean. Liburutegiren bat topatuko ez balu configure-ri
badago esatea non dagoen. Aukera guztiak ikusteko './configure --help'.

Badirudi linux banaketa bakoitzak swipl header-ak nahi duen lekuan instalatzen
dituela. Adibidez ubuntun  --with-swipl-include=/usr/lib/swi-prolog/include erabili
behar da header-ak topatzeko.


Azkenik, eustagger probatzeko ingurunean aldaketa hauek egin:

	$ export IXA_PREFIX=gure_prefix (/usr/local?)
	$ export LD_LIBRARY_PATH=gure_prefix/lib:$LD_LIBRARY_PATH

eustagger egikaritzeko prest gaude:

	$ eustagger_lite sarrera_fitx.txt

eustagger zerbitzu moduan botatzeko:

	$ eustagger_lite -p [portua]

eustagger bezeroa:
	$ eustagger_lite_client.pl [portua] [fitxategiaren_bide_osoa]



ARAZOAK 1:
-----------
Eustagger exekutatzean tcmalloc-ek errore hau eman dezake (ubuntu 16.04): 
eustagger_lite ~/test1.txt 
src/tcmalloc.cc:278] Attempt to free invalid pointer 0x8c94bd8 
Aborted (core dumped)

Arazo hau ematen badu, vislcg3-k erabiltzen duen libtcmalloc.so liburutegian dago arazoa. Konpontzeko 2 aukera daude:
  1) ubuntun ezabatu libgoogle-perftools-dev paketea :
     $sudo apt-get remove libgoogle-perftools-dev
  2) vislcg3 berriz konpilatu cmake.sh-ri -DUSE_TCMALLOC:BOOL=false parametroa pasata (Ez dago testeatuta)

ARAZOAK 2:
-----------
Eustagger exekutatzean liburutegiak ez baditu topatzen (libcg3.so edo libeustagger.so) esteka sinbolikoak sortu behar dira. Hau gerta daiteke vislcg3 eta eustagger /usr/local ez den beste direktorio batean instalatu direnean.

ARAZOAK 3:
-----------
Eustagger, 64 bitetako Ubuntu 16.04 bertsioan egikaritzerakoan jarraian azaltzen den errorea ematen badu: 


//libeustagger.so: undefined reference to `pcrepp::Pcre::split(std::string const&)'
.//libeustagger.so: undefined reference to `u_fgetc_48'
.//libeustagger.so: undefined reference to `pcrepp::Pcre::search(std::string const&, int)'
.//libeustagger.so: undefined reference to `pcrepp::Pcre::search(std::string const&)'
.//libeustagger.so: undefined reference to `ucnv_setDefaultName_48'
.//libeustagger.so: undefined reference to `u_fclose_48'
.//libeustagger.so: undefined reference to `freeling::word::set_form(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)'
.//libeustagger.so: undefined reference to `u_cleanup_48'
.//libeustagger.so: undefined reference to `uloc_getDefault_48'
.//libeustagger.so: undefined reference to `u_fgetfile_48'
.//libeustagger.so: undefined reference to `pcrepp::Pcre::Pcre(std::string const&, std::string const&)'
.//libeustagger.so: undefined reference to `pcrepp::Pcre::replace(std::string const&, std::string const&)'
.//libeustagger.so: undefined reference to `freeling::word::get_form() const'
.//libeustagger.so: undefined reference to `ucnv_getDefaultName_48'
.//libeustagger.so: undefined reference to `freeling::word::word(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)'
.//libeustagger.so: undefined reference to `u_errorName_48'
.//libeustagger.so: undefined reference to `uloc_setDefault_48'
.//libeustagger.so: undefined reference to `freeling::analysis::get_tag() const'
.//libeustagger.so: undefined reference to `CG3::cbuffers'
.//libeustagger.so: undefined reference to `freeling::analysis::analysis(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)'
.//libeustagger.so: undefined reference to `pcrepp::Pcre::Pcre(std::string const&)'
.//libeustagger.so: undefined reference to `u_fgets_48'
.//libeustagger.so: undefined reference to `freeling::analysis::get_lemma() const'
.//libeustagger.so: undefined reference to `u_fopen_48'
.//libeustagger.so: undefined reference to `u_feof_48'
.//libeustagger.so: undefined reference to `pcrepp::Pcre::get_match(int) const'
.//libeustagger.so: undefined reference to `u_finit_48'
.//libeustagger.so: undefined reference to `u_init_48'
collect2: error: ld returned 1 exit status

LD_LIBRARY_PATH ingurune aldagaian honakoa gehitu behar da:


	export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH


